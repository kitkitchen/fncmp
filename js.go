package main

import "fmt"

func js(port string, id string, path string) string {
	return fmt.Sprintf(`(()=>{var a,s;var i=class{constructor(o){if(this.ws=null,this.addr=void 0,this.funs={_render:e=>{let t=document.getElementById(e.target_id);t||(e.function="error",e.message="element not found: "+e.target_id,this.ws.send(JSON.stringify(e))),e.inner?t.innerHTML=e.data:t.outerHTML=e.data,console.log("ELEMENT:"),console.log(t),console.log("HTML:"),console.log(e.data),e.event_listeners.forEach(n=>{let r=document.getElementById(n.fn_id);r&&r.addEventListener(n.on,l=>{l.preventDefault(),console.log("event: "+n.on);let d;if(n.on=="submit"){let f=l.target,u=new FormData(f);d=Object.fromEntries(u.entries()),console.log(d)}let c={function:"event",conn_id:s,target_id:n.fn_id,inner:!1,action:n.action,method:n.method,event:n,event_listeners:[],data:JSON.stringify(r),message:"event dispatched"};console.log("EVENT:"),console.log(c),this.ws.send(JSON.stringify(c))})})},redirect:e=>{let t={function:"redirect",conn_id:s,target_id:e.target_id,inner:e.inner,action:e.action,method:e.method,event:e.event,data:e.data,event_listeners:e.event_listeners,message:e.message};this.ws.send(JSON.stringify(t))},render:e=>{console.log(e),this.funs._render(e)}},this.addr)throw new Error("ws: already connected to server...");if(!o)throw new Error("ws: no address provided...");this.addr=o,a=this.funs,this.connect(o)}connect(o){try{this.ws=new WebSocket(o)}catch(t){throw new Error("ws: failed to connect to server...")}let e=()=>{setTimeout(()=>{this.ws.CLOSED&&(location.reload(),e())},1e3)};this.ws.onopen=function(){},this.ws.onclose=function(){e()},this.ws.onerror=function(t){e()},this.ws.onmessage=function(t){let n=JSON.parse(t.data);if(console.log(n),!n)throw new Error("ws: no data received in request...");if(n.function=="_connect"){if(s)return;s=n.conn_id}else{if(!n.function){console.log("ws: error no function provided in request...");return}a[n.function](n)}}}},w=new i("ws://localhost%s/%s/%s");})();`, port, id, path)
}
