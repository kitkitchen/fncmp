package main

import "fmt"

func js(port string, id string, path string) string {
	return fmt.Sprintf(`(()=>{var u,i;var l=class{constructor(s){if(this.ws=null,this.addr=void 0,this.funs={_render:e=>{let t=document.getElementById(e.id);if(!t)return{error:!0,message:"element not found: "+e};t.innerHTML=e.html,console.log(e.html);let n=t.querySelectorAll("[fc]");console.log(n),n.forEach(r=>{if(console.log("ELEM"),console.log(r),!r)return;let a=r.getAttribute("fc");console.log("_FC ATTRIBUTE"),console.log(a),JSON.parse(a).forEach(h=>{let o=h;r.addEventListener(o.on,d=>{d.preventDefault(),console.log("event: "+o.on);let c;if(o.on=="submit"){let g=d.target,w=new FormData(g);c=Object.fromEntries(w.entries()),console.log(c)}let f={function:"event",conn_id:i,target_id:r.id,inner:!1,action:o.action,method:o.method,event:o,data:JSON.stringify(c),message:"event dispatched"};console.log(f),this.ws.send(JSON.stringify(f))})})})},redirect:e=>{let t={function:"redirect",conn_id:i,target_id:e.target_id,inner:!1,action:e.action,method:e.method,event:e.event,data:e.data,message:e.message};this.ws.send(JSON.stringify(t))},render:e=>{console.log(e),this.funs._render({id:e.target_id,inner:e.inner,html:e.data})}},this.addr)throw new Error("ws: already connected to server...");if(!s)throw new Error("ws: no address provided...");this.addr=s,u=this.funs,this.connect(s)}connect(s){try{this.ws=new WebSocket(s)}catch(t){throw new Error("ws: failed to connect to server...")}let e=()=>{setTimeout(()=>{this.ws.CLOSED&&(location.reload(),e())},1e3)};this.ws.onopen=function(){},this.ws.onclose=function(){e()},this.ws.onerror=function(t){e()},this.ws.onmessage=function(t){let n=JSON.parse(t.data);if(console.log(n),!n)throw new Error("ws: no data received in request...");if(n.function=="_connect"){if(i)return;i=n.conn_id}else{if(!n.function){console.log("ws: error no function provided in request...");return}u[n.function](n)}}}},v=new l("ws://localhost%s/%s/%s");})();`, port, id, path)
}
