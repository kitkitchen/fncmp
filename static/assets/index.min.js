(()=>{var y=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var E=y(f=>{var v=f&&f.__awaiter||function(e,n,r,t){function c(o){return o instanceof r?o:new r(function(s){s(o)})}return new(r||(r=Promise))(function(o,s){function u(i){try{a(t.next(i))}catch(w){s(w)}}function l(i){try{a(t.throw(i))}catch(w){s(w)}}function a(i){i.done?o(i.value):c(i.value).then(u,l)}a((t=t.apply(e,n||[])).next())})},d,g,b=!1,m=class{constructor(n){if(this.ws=null,this.addr=void 0,this.addr)throw new Error("ws: already connected to server...");if(!n)throw new Error("ws: no address provided...");this.addr=n,this.connect(n)}connect(n){try{this.ws=new WebSocket(n)}catch(r){throw new Error("ws: failed to connect to server...")}this.ws.onopen=function(){},this.ws.onclose=function(){},this.ws.onerror=function(r){throw new Error("ws: "+r)},this.ws.onmessage=function(r){let t=JSON.parse(r.data);if(!t)throw new Error("ws: no data received in request...");if(t.function=="_connect"){if(d)return;let s=t;d=s.data.conn_id,g=s.data.base_url,b=s.data.verbose,this.send(JSON.stringify({error:!1,message:"connected"}));return}if(!d)return;let c=h[t.function],o=c(t.data);this.send(JSON.stringify(o))}}},S=new m("ws://localhost:8080/funs"),h={_render:e=>{let n=document.getElementById(e.id);return n?(n.innerHTML=e.html,console.log(e.html),n.querySelectorAll("[fc]").forEach(t=>{if(!t)return;let c=t.getAttribute("fc"),o=JSON.parse(c);t.addEventListener(o.on,s=>{s.preventDefault(),console.log("event: "+o.on);let u;if(o.on=="submit"){let l=s.target,a=new FormData(l);u=Object.fromEntries(a.entries())}h.event({conn_id:d,target_id:t.id,event:o,data:u})})}),{error:!1,message:"success"}):{error:!0,message:"element not found: "+e}},event:e=>v(f,void 0,void 0,function*(){let n={};console.log("event: "+e.toString());let r=yield _(e.event.action,e.event.method,e).then(t=>(n=t.headers,t.text())).then(t=>t).catch(t=>({error:!0,message:t}));h._render({id:e.target_id,inner:!1,html:r.toString()})}),render:e=>v(f,void 0,void 0,function*(){let n=yield _(e.action,e.method,e).then(r=>r.text().then(t=>t)).catch(r=>({error:!0,message:r}));h._render({id:e.target_id,inner:e.inner,html:n})})},_=(e,n,r,t)=>(console.log("base_url: "+g),fetch(g||"http://localhost:8080"+e,{method:n,headers:Object.assign(Object.assign({},t),{Conn:d||""}),body:JSON.stringify(r)}))});E();})();
